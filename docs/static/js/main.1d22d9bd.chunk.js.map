{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","mais","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAdU,SAACC,GAGjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,GAEzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,QAOvC,SAEI,uBACAC,KAAK,OACLC,MAAOT,EACPU,SAvBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,mCCRlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,0FAE4EF,EAF5E,sBAICG,MAAMD,GAJP,cAIXE,EAJW,gBAKGA,EAAKC,OALR,uBAKVC,EALU,EAKVA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAI1CY,QAAQC,IAAIR,GAfK,kBAgBVA,GAhBU,4CAAD,sDCAPS,EAAc,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAG/B,OACI,sBAAKe,UAAU,OAAf,UACE,qBAAKC,IAAKhB,EAAKiB,IAAKR,IACpB,4BAAIA,QCDDS,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SASnB,ECZsB,SAACA,GAEzB,MAA0Bd,mBAAS,CAE/BoB,KAAK,GACLe,SAAQ,IAHZ,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OAlBDC,qBAAU,WACTzB,EAAQC,GACPyB,MAAK,SAAAhB,GAEFiB,YAAW,WACPH,EAAS,CAETjB,KAAKG,EACLY,SAAQ,MAGT,UAGN,CAACrB,IAIKsB,EDhBwBK,CAAa3B,GAA9BY,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAIrB,OAEG,qCACC,6BAAKrB,IAIN,sBAAKiB,UAAU,YAAf,UAIKI,GAAW,4CAIJT,EAAOJ,KAAI,SAAAC,GAAG,OAAE,cAAC,EAAD,eAEXA,GADCA,EAAIC,cEKdkB,EApCM,WAIlB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOC,OAAO,qCACH,+CAGA,cAACD,EAAD,CAAaC,cAAeA,IAE5B,uBAGA,6BAEQ4C,EAAWrB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACAA,SAAUA,GACLA,Y,MCvBzB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.1d22d9bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({setCategories}) {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e)=>{\r\n\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>2) {\r\n            \r\n            setCategories(mais=>[inputValue,...mais]);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n            type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n\r\n            />\r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs=async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=BD76FfCJLd2FQxJkczUpXfcE45kGNipw&q=${category}&limit=10`;\r\n\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json(); \r\n\r\n    const gifs= data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log(gifs)\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n   \r\n    return (\r\n        <div className=\"card\">\r\n          <img src={url} alt={title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\n// import { useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   //  const [Images, setImages] = useState([])\r\n   \r\n   //  useEffect(()=>{\r\n   //     getGifs(category).\r\n   //     then(setImages)\r\n   //  },[])\r\n\r\n      const {data:images,loading}= useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n       \r\n       <>\r\n        <h3>{category}</h3>\r\n\r\n        \r\n\r\n       <div className=\"card-grid\">\r\n         \r\n           \r\n\r\n           {loading && <p>Cargando...</p> }\r\n            \r\n               \r\n               {\r\n                   images.map(img=><GifGridItem \r\n                    key={img.id}\r\n                    {...img}/>)\r\n               }\r\n              \r\n            \r\n        </div>\r\n       </>\r\n       \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n    const [state, setState] = useState({\r\n\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    \r\n\r\n   useEffect(()=>{\r\n    getGifs(category)\r\n    .then(img=>{\r\n\r\n        setTimeout(() => {\r\n            setState({\r\n                \r\n            data:img,\r\n            loading:false\r\n            })\r\n            \r\n        }, 3000);\r\n    })\r\n    \r\n   },[category])\r\n\r\n  \r\n\r\n    return state;\r\n\r\n\r\n}\r\n","\r\nimport { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GiftExpertApp= ()=>{\r\n \r\n    // const categories= ['One punch','samurai x', 'dragon ball']\r\n\r\n   const [categories, setCategories] = useState(['butterlfies'])\r\n\r\n//    const handleAdd= ()=>{\r\n        \r\n//         setCategories([...categories,'HunterxHunter']);\r\n//    }\r\n    \r\n    return(<>\r\n        <h2>\r\n            GiftExpertAPP\r\n        </h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        \r\n        <hr/>\r\n\r\n        {\r\n        <ol>\r\n           {\r\n                categories.map(category=> \r\n                    <GifGrid \r\n                    category={category}\r\n                    key={category}/>\r\n                )\r\n           }\r\n        </ol>\r\n        \r\n     }\r\n\r\n        </>)\r\n    \r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n \n    <GiftExpertApp/>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}